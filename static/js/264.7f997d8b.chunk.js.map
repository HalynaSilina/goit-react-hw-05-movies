{"version":3,"file":"static/js/264.7f997d8b.chunk.js","mappings":"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","sources":["Api-service/ApiService.js","components/CastList/CastList.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6162be73d8284a514c6daa14bf64a77d';\n\nexport async function fetchTrendingMovies() {\n  return await fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\nexport async function fetchById(id) {\n  return await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\nexport async function fetchByQuery (query) {\n  return await fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\n\nexport async function fetchCredits (id) {\n  return await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}\n\nexport async function fetchReviews (id) {\n  return await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) Promise.reject(new Error('Opps...something going wrong'));\n      return res.json();\n    }\n  );\n}","import PropTypes from 'prop-types';\n\nexport const CastList = ({ credits }) => {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n  return (\n    <ul>\n      {credits.map(credit => {\n        return (\n          <li key={credit.id}>\n            {credit.profile_path ? (\n              <img\n                src={`${imageBaseUrl}${credit.profile_path}`}\n                alt={credit.name}\n              />\n            ) : (\n              <div>Not found</div>\n            )}\n            <p>Name: {credit.name}</p>\n            <p>Character: {credit.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  credits: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from 'Api-service/ApiService';\nimport { CastList } from '../CastList/CastList';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        await fetchCredits(movieId).then(data => setCredits(data.cast));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCast();\n  }, [movieId]);\n  return (\n    <>\n      <div>Cast</div>\n      {credits.length > 0 ? (\n        <CastList credits={credits} />\n      ) : (\n        <div>No info about the cast.</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","then","res","ok","Promise","reject","Error","json","fetchById","id","fetchByQuery","query","fetchCredits","fetchReviews","CastList","credits","map","credit","profile_path","src","alt","name","character","useState","setCredits","movieId","useParams","useEffect","data","cast","console","log","fetchCast","length","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}